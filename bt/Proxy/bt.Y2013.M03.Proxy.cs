//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18010
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProductAttribute("bt")]
[assembly: global::System.Reflection.AssemblyTitleAttribute("bt")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Proxy, SourceAssemblyKey="bt.Y2013.M03, Version=1.0.0.0, Culture=neutral, PublicKeyToken=6f86af2ac3621ba2")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace bt.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html", ElementName="btState")]
    public class btState : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public btState() {
        }
        
        /// <summary>
        ///Copies the data member values of the current btState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::bt.Proxy.btState typedTarget = ((global::bt.Proxy.btState)(target));
        }
        
        /// <summary>
        ///Clones btState
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::bt.Proxy.btState target0 = new global::bt.Proxy.btState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current btState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
        }
        
        /// <summary>
        ///Deserializes btState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized btState</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html", ElementName="ConnectRequest")]
    public class ConnectRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public ConnectRequest() {
        }
        
        /// <summary>
        ///Copies the data member values of the current ConnectRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::bt.Proxy.ConnectRequest typedTarget = ((global::bt.Proxy.ConnectRequest)(target));
        }
        
        /// <summary>
        ///Clones ConnectRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::bt.Proxy.ConnectRequest target0 = new global::bt.Proxy.ConnectRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current ConnectRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
        }
        
        /// <summary>
        ///Deserializes ConnectRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized ConnectRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html", ElementName="SetActiveRequest")]
    public class SetActiveRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SetActiveRequest() {
        }
        
        /// <summary>
        ///Copies the data member values of the current SetActiveRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::bt.Proxy.SetActiveRequest typedTarget = ((global::bt.Proxy.SetActiveRequest)(target));
        }
        
        /// <summary>
        ///Clones SetActiveRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::bt.Proxy.SetActiveRequest target0 = new global::bt.Proxy.SetActiveRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SetActiveRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
        }
        
        /// <summary>
        ///Deserializes SetActiveRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SetActiveRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html", ElementName="UpdateProcessingRequest")]
    public class UpdateProcessingRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public UpdateProcessingRequest() {
        }
        
        public UpdateProcessingRequest(bool processing) {
            this._Processing = processing;
        }
        
        private bool _Processing;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public bool Processing {
            get {
                return this._Processing;
            }
            set {
                this._Processing = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current UpdateProcessingRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::bt.Proxy.UpdateProcessingRequest typedTarget = ((global::bt.Proxy.UpdateProcessingRequest)(target));
            typedTarget._Processing = this._Processing;
        }
        
        /// <summary>
        ///Clones UpdateProcessingRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::bt.Proxy.UpdateProcessingRequest target0 = new global::bt.Proxy.UpdateProcessingRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current UpdateProcessingRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            writer.Write(this._Processing);
        }
        
        /// <summary>
        ///Deserializes UpdateProcessingRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized UpdateProcessingRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._Processing = reader.ReadBoolean();
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html", ElementName="AddToPathRequest")]
    public class AddToPathRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public AddToPathRequest() {
        }
        
        /// <summary>
        ///Copies the data member values of the current AddToPathRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::bt.Proxy.AddToPathRequest typedTarget = ((global::bt.Proxy.AddToPathRequest)(target));
        }
        
        /// <summary>
        ///Clones AddToPathRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::bt.Proxy.AddToPathRequest target0 = new global::bt.Proxy.AddToPathRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current AddToPathRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
        }
        
        /// <summary>
        ///Deserializes AddToPathRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized AddToPathRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.tempuri.org/2013/03/bt.html", ElementName="TrainKeypointRequest")]
    public class TrainKeypointRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public TrainKeypointRequest() {
        }
        
        /// <summary>
        ///Copies the data member values of the current TrainKeypointRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::bt.Proxy.TrainKeypointRequest typedTarget = ((global::bt.Proxy.TrainKeypointRequest)(target));
        }
        
        /// <summary>
        ///Clones TrainKeypointRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::bt.Proxy.TrainKeypointRequest target0 = new global::bt.Proxy.TrainKeypointRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current TrainKeypointRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
        }
        
        /// <summary>
        ///Deserializes TrainKeypointRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized TrainKeypointRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Get : global::Microsoft.Dss.ServiceModel.Dssp.Get<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Ccr.Core.PortSet<global::bt.Proxy.btState, global:: W3C.Soap.Fault>> {
        
        public Get() {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Ccr.Core.PortSet<global::bt.Proxy.btState, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Connect : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::bt.Proxy.ConnectRequest, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault>> {
        
        public Connect() {
        }
        
        public Connect(global::bt.Proxy.ConnectRequest body) : 
                base(body) {
        }
        
        public Connect(global::bt.Proxy.ConnectRequest body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class SetActive : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::bt.Proxy.SetActiveRequest, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault>> {
        
        public SetActive() {
        }
        
        public SetActive(global::bt.Proxy.SetActiveRequest body) : 
                base(body) {
        }
        
        public SetActive(global::bt.Proxy.SetActiveRequest body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class UpdateProcessing : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::bt.Proxy.UpdateProcessingRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public UpdateProcessing() {
        }
        
        public UpdateProcessing(global::bt.Proxy.UpdateProcessingRequest body) : 
                base(body) {
        }
        
        public UpdateProcessing(global::bt.Proxy.UpdateProcessingRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class UpdateDirection : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public UpdateDirection() {
        }
        
        public UpdateDirection(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public UpdateDirection(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class AddToPath : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::bt.Proxy.AddToPathRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public AddToPath() {
        }
        
        public AddToPath(global::bt.Proxy.AddToPathRequest body) : 
                base(body) {
        }
        
        public AddToPath(global::bt.Proxy.AddToPathRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class MoveLastPoint : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::bt.Proxy.AddToPathRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public MoveLastPoint() {
        }
        
        public MoveLastPoint(global::bt.Proxy.AddToPathRequest body) : 
                base(body) {
        }
        
        public MoveLastPoint(global::bt.Proxy.AddToPathRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class ResetPath : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public ResetPath() {
        }
        
        public ResetPath(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public ResetPath(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class TrainKeypoint : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::bt.Proxy.TrainKeypointRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public TrainKeypoint() {
        }
        
        public TrainKeypoint(global::bt.Proxy.TrainKeypointRequest body) : 
                base(body) {
        }
        
        public TrainKeypoint(global::bt.Proxy.TrainKeypointRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class btOperations : global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup, global:: Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop, global:: bt.Proxy.Get, global:: bt.Proxy.Connect, global:: bt.Proxy.SetActive, global:: bt.Proxy.UpdateProcessing, global:: bt.Proxy.UpdateDirection, global:: bt.Proxy.AddToPath, global:: bt.Proxy.MoveLastPoint, global:: bt.Proxy.ResetPath, global:: bt.Proxy.TrainKeypoint> {
        
        public btOperations() {
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup() {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop() {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::bt.Proxy.btState, global:: W3C.Soap.Fault> Get() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::bt.Proxy.Get operation = new global::bt.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(out global::bt.Proxy.Get operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::bt.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::bt.Proxy.btState, global:: W3C.Soap.Fault> Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::bt.Proxy.Get operation = new global::bt.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::bt.Proxy.Get operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::bt.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> Connect() {
            global::bt.Proxy.ConnectRequest body = new global::bt.Proxy.ConnectRequest();
            global::bt.Proxy.Connect operation = new global::bt.Proxy.Connect(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Connect(out global::bt.Proxy.Connect operation) {
            global::bt.Proxy.ConnectRequest body = new global::bt.Proxy.ConnectRequest();
            operation = new global::bt.Proxy.Connect(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> Connect(global::bt.Proxy.ConnectRequest body) {
            if ((body == null)) {
                body = new global::bt.Proxy.ConnectRequest();
            }
            global::bt.Proxy.Connect operation = new global::bt.Proxy.Connect(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Connect(global::bt.Proxy.ConnectRequest body, out global::bt.Proxy.Connect operation) {
            if ((body == null)) {
                body = new global::bt.Proxy.ConnectRequest();
            }
            operation = new global::bt.Proxy.Connect(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> SetActive() {
            global::bt.Proxy.SetActiveRequest body = new global::bt.Proxy.SetActiveRequest();
            global::bt.Proxy.SetActive operation = new global::bt.Proxy.SetActive(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetActive(out global::bt.Proxy.SetActive operation) {
            global::bt.Proxy.SetActiveRequest body = new global::bt.Proxy.SetActiveRequest();
            operation = new global::bt.Proxy.SetActive(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> SetActive(global::bt.Proxy.SetActiveRequest body) {
            if ((body == null)) {
                body = new global::bt.Proxy.SetActiveRequest();
            }
            global::bt.Proxy.SetActive operation = new global::bt.Proxy.SetActive(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetActive(global::bt.Proxy.SetActiveRequest body, out global::bt.Proxy.SetActive operation) {
            if ((body == null)) {
                body = new global::bt.Proxy.SetActiveRequest();
            }
            operation = new global::bt.Proxy.SetActive(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> UpdateProcessing(bool processing) {
            global::bt.Proxy.UpdateProcessingRequest body = new global::bt.Proxy.UpdateProcessingRequest(processing);
            global::bt.Proxy.UpdateProcessing operation = new global::bt.Proxy.UpdateProcessing(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice UpdateProcessing(bool processing, out global::bt.Proxy.UpdateProcessing operation) {
            global::bt.Proxy.UpdateProcessingRequest body = new global::bt.Proxy.UpdateProcessingRequest(processing);
            operation = new global::bt.Proxy.UpdateProcessing(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> UpdateProcessing(global::bt.Proxy.UpdateProcessingRequest body) {
            if ((body == null)) {
                body = new global::bt.Proxy.UpdateProcessingRequest();
            }
            global::bt.Proxy.UpdateProcessing operation = new global::bt.Proxy.UpdateProcessing(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice UpdateProcessing(global::bt.Proxy.UpdateProcessingRequest body, out global::bt.Proxy.UpdateProcessing operation) {
            if ((body == null)) {
                body = new global::bt.Proxy.UpdateProcessingRequest();
            }
            operation = new global::bt.Proxy.UpdateProcessing(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> UpdateDirection() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::bt.Proxy.UpdateDirection operation = new global::bt.Proxy.UpdateDirection(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice UpdateDirection(out global::bt.Proxy.UpdateDirection operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::bt.Proxy.UpdateDirection(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> UpdateDirection(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::bt.Proxy.UpdateDirection operation = new global::bt.Proxy.UpdateDirection(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice UpdateDirection(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::bt.Proxy.UpdateDirection operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::bt.Proxy.UpdateDirection(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> AddToPath() {
            global::bt.Proxy.AddToPathRequest body = new global::bt.Proxy.AddToPathRequest();
            global::bt.Proxy.AddToPath operation = new global::bt.Proxy.AddToPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice AddToPath(out global::bt.Proxy.AddToPath operation) {
            global::bt.Proxy.AddToPathRequest body = new global::bt.Proxy.AddToPathRequest();
            operation = new global::bt.Proxy.AddToPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> AddToPath(global::bt.Proxy.AddToPathRequest body) {
            if ((body == null)) {
                body = new global::bt.Proxy.AddToPathRequest();
            }
            global::bt.Proxy.AddToPath operation = new global::bt.Proxy.AddToPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice AddToPath(global::bt.Proxy.AddToPathRequest body, out global::bt.Proxy.AddToPath operation) {
            if ((body == null)) {
                body = new global::bt.Proxy.AddToPathRequest();
            }
            operation = new global::bt.Proxy.AddToPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> MoveLastPoint() {
            global::bt.Proxy.AddToPathRequest body = new global::bt.Proxy.AddToPathRequest();
            global::bt.Proxy.MoveLastPoint operation = new global::bt.Proxy.MoveLastPoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice MoveLastPoint(out global::bt.Proxy.MoveLastPoint operation) {
            global::bt.Proxy.AddToPathRequest body = new global::bt.Proxy.AddToPathRequest();
            operation = new global::bt.Proxy.MoveLastPoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> MoveLastPoint(global::bt.Proxy.AddToPathRequest body) {
            if ((body == null)) {
                body = new global::bt.Proxy.AddToPathRequest();
            }
            global::bt.Proxy.MoveLastPoint operation = new global::bt.Proxy.MoveLastPoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice MoveLastPoint(global::bt.Proxy.AddToPathRequest body, out global::bt.Proxy.MoveLastPoint operation) {
            if ((body == null)) {
                body = new global::bt.Proxy.AddToPathRequest();
            }
            operation = new global::bt.Proxy.MoveLastPoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> ResetPath() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::bt.Proxy.ResetPath operation = new global::bt.Proxy.ResetPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice ResetPath(out global::bt.Proxy.ResetPath operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::bt.Proxy.ResetPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> ResetPath(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::bt.Proxy.ResetPath operation = new global::bt.Proxy.ResetPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice ResetPath(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::bt.Proxy.ResetPath operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::bt.Proxy.ResetPath(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> TrainKeypoint() {
            global::bt.Proxy.TrainKeypointRequest body = new global::bt.Proxy.TrainKeypointRequest();
            global::bt.Proxy.TrainKeypoint operation = new global::bt.Proxy.TrainKeypoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice TrainKeypoint(out global::bt.Proxy.TrainKeypoint operation) {
            global::bt.Proxy.TrainKeypointRequest body = new global::bt.Proxy.TrainKeypointRequest();
            operation = new global::bt.Proxy.TrainKeypoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> TrainKeypoint(global::bt.Proxy.TrainKeypointRequest body) {
            if ((body == null)) {
                body = new global::bt.Proxy.TrainKeypointRequest();
            }
            global::bt.Proxy.TrainKeypoint operation = new global::bt.Proxy.TrainKeypoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice TrainKeypoint(global::bt.Proxy.TrainKeypointRequest body, out global::bt.Proxy.TrainKeypoint operation) {
            if ((body == null)) {
                body = new global::bt.Proxy.TrainKeypointRequest();
            }
            operation = new global::bt.Proxy.TrainKeypoint(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("bt service (no description provided)")]
    [global::System.ComponentModel.DisplayNameAttribute("bt")]
    public class Contract {
        
        public const string Identifier = "http://schemas.tempuri.org/2013/03/bt.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.tempuri.org/2013/03/bt.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.tempuri.org/2013/03/bt.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.btOperations = new global::bt.Proxy.btOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.btOperations, "http://schemas.tempuri.org/2013/03/bt.html", "btOperations", ""));
        }
        
        public global::bt.Proxy.btOperations btOperations;
    }
}
